<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-15T20:34:36 IST" name="Suite" finished-at="2024-12-15T20:34:53 IST" duration-ms="17089">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationsTest.loginErrorValidation()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" name="loginErrorValidation" class="com.vikram.tests.ErrorValidationsTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Purchase">
        <method signature="SubmitOrderTest.submitOrder(java.util.HashMap)[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" name="submitOrder" class="com.vikram.tests.SubmitOrderTest"/>
      </group> <!-- Purchase -->
    </groups>
    <test started-at="2024-12-15T20:34:36 IST" name="Error Validations Test" finished-at="2024-12-15T20:34:47 IST" duration-ms="10546">
      <class name="com.vikram.tests.ErrorValidationsTest">
        <test-method is-config="true" signature="lanuchApplication()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:36 IST" name="lanuchApplication" finished-at="2024-12-15T20:34:39 IST" duration-ms="2685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanuchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:39 IST" name="loginErrorValidation" finished-at="2024-12-15T20:34:39 IST" duration-ms="290" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.vikram.tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:39 IST" name="tearDown" finished-at="2024-12-15T20:34:39 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanuchApplication()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:39 IST" name="lanuchApplication" finished-at="2024-12-15T20:34:42 IST" duration-ms="2628" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanuchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:42 IST" name="loginErrorValidation" finished-at="2024-12-15T20:34:43 IST" duration-ms="1015" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.vikram.tests.ErrorValidationsTest.loginErrorValidation(ErrorValidationsTest.java:22)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:43 IST" name="tearDown" finished-at="2024-12-15T20:34:43 IST" duration-ms="81" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanuchApplication()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:43 IST" name="lanuchApplication" finished-at="2024-12-15T20:34:44 IST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanuchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:44 IST" name="productErrorValidation" finished-at="2024-12-15T20:34:47 IST" duration-ms="2582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vikram.tests.ErrorValidationsTest@74eb909f]" started-at="2024-12-15T20:34:47 IST" name="tearDown" finished-at="2024-12-15T20:34:47 IST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.vikram.tests.ErrorValidationsTest -->
    </test> <!-- Error Validations Test -->
    <test started-at="2024-12-15T20:34:36 IST" name="Sumit Order Test" finished-at="2024-12-15T20:34:53 IST" duration-ms="17089">
      <class name="com.vikram.tests.SubmitOrderTest">
        <test-method is-config="true" signature="lanuchApplication()[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:36 IST" name="lanuchApplication" finished-at="2024-12-15T20:34:44 IST" duration-ms="7935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanuchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:44 IST" name="submitOrder" data-provider="getData" finished-at="2024-12-15T20:34:48 IST" duration-ms="3481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Admin@123?, product=ZARA COAT 3, email=vikki2k6@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:48 IST" name="tearDown" finished-at="2024-12-15T20:34:48 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanuchApplication()[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:48 IST" name="lanuchApplication" finished-at="2024-12-15T20:34:48 IST" duration-ms="756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanuchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:48 IST" name="submitOrder" data-provider="getData" finished-at="2024-12-15T20:34:52 IST" duration-ms="3524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Iamking@000, product=ADIDAS ORIGINAL, email=shetty@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:52 IST" name="tearDown" finished-at="2024-12-15T20:34:52 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="lanuchApplication()[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:52 IST" name="lanuchApplication" finished-at="2024-12-15T20:34:53 IST" duration-ms="682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lanuchApplication -->
        <test-method signature="orderHistory()[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:53 IST" name="orderHistory" finished-at="2024-12-15T20:34:53 IST" depends-on-methods="com.vikram.tests.SubmitOrderTest.submitOrder" duration-ms="407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistory -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.vikram.tests.SubmitOrderTest@a87f8ec]" started-at="2024-12-15T20:34:53 IST" name="tearDown" finished-at="2024-12-15T20:34:53 IST" duration-ms="68" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.vikram.tests.SubmitOrderTest -->
    </test> <!-- Sumit Order Test -->
  </suite> <!-- Suite -->
</testng-results>
